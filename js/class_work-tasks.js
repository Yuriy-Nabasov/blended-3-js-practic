`use strict`; // –ö–æ–¥ —É —Å—É–≤–æ—Ä–æ–º—É —Ä–µ–∂–∏–º—ñ

// –ó–ê–î–ê–ß–Ü –î–õ–Ø –¢–†–ï–ù–£–í–ê–ù–ù–Ø!
/*
? –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits.
? –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫
? —É —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞.
? –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
*/

// const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçé', 'üçã'];

// console.log(fruits);

// for (let i = 0; i < fruits.length; i++) {
//   console.log(`${i + 1}: ${fruits[i]}`);
// }
/*
? –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏,
? –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π values —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞.
? –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.
 */

// const values = '8 11';
// const rectSides = values.split(' ');
// const rectArea = Number(rectSides[0]) * Number(rectSides[1]);

// console.log('values:', values);
// console.log('rectSides:', rectSides);
// console.log('rectArea:', rectArea);

/*
? –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –ø—ñ–¥—Ä–∞—Ö–æ–≤—É—î —Å—É–º—É –≤—Å—ñ—Ö –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª —É –º–∞—Å–∏–≤—ñ.
*/

// const numbers = [1, 5, 8, 9, 12, 4];
// let total = 0;

// console.log('numbers: ', numbers);

// for (const num of numbers) {
//   if (num % 2 === 0) {
//     total += num;
//   }
// }

// console.log('total: ', total);

/*
? –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
? –£ –∑–º—ñ–Ω–Ω–∏—Ö names —Ç–∞ phones –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤,
? —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞
? –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
*/

// const names = 'Jacob,William,Solomon,Artemis';
// const phones = '89001234567,89001112233,890055566377,890055566300';

// console.log('names:', names);
// console.log('phones:', phones);

// const namesArr = names.split(',');
// const phonesArr = phones.split(',');

// console.log('namesArr:', namesArr);
// console.log('phonesArr:', phonesArr);

// for (let i = 0; i < namesArr.length; i++) {
//   console.log(`${namesArr[i]}: ${phonesArr[i]}`);
// }
/*
? –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —É—Å—ñ —Å–ª–æ–≤–∞ —Ä—è–¥–∫–∞ –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —ñ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ.
*/

// const string = "Our office is closed so we`re working from home today.";
// const words = string.split(" ");
// for (let i = 1; i < words.length - 1; i++) {
//   console.log(words[i]);
// }

/*
? –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ—à—É–∫—É –Ω–∞–π–º–µ–Ω—à–æ–≥–æ —á–∏—Å–ª–∞ —É –º–∞—Å–∏–≤—ñ. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏
? –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ –º–∞—Å–∏–≤—É —á–∏—Å–µ–ª. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–æ–∑–≤'—è–∑–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ.
*/

// const values = [17, -10, 94, -30, 1, 23, -40];
// let min = values[0];
// for (let i = 1; i < values.length; i++) {
//   if (min > values[i]) {
//     min = values[i];
//   }
// }
// console.log(min);

/*
? –£ –Ω–∞—Å —î –¥–µ–∫—ñ–ª—å–∫–æ –º–∞—Å–∏–≤—ñ–≤ —ñ–∑ –∑–∞—Ä–ø–ª–∞—Ç–∞–º–∏ –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫—ñ–≤ —ñ–∑ —Ä—ñ–∑–Ω–∏—Ö –≤—ñ–¥–¥—ñ–ª—ñ–≤, –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –∑–∞—Ä–ø–ª–∞—Ç
*/

// const managerSalaries = [100, 150, 250, 400, 500];
// const developersSalaries = [800, 1500, 4000];
// const totalSalaries = managerSalaries.concat(developersSalaries);
// let total = 0;
// for (let i = 0; i < totalSalaries.length; i++) {
//   total += totalSalaries[i];
// }
// console.log(`–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–ºa –∑–∞—Ä–ø–ª–∞—Ç ${total}`);

// ! 06-01-2025 module-10-lesson-2
// ? ----- 01-timeout-interval -----

/*
 * –°–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π vs –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π JS
 *
 * –°—Ç–µ–∫ –≤–∏–∫–ª–∏–∫—É —Ñ—É–Ω–∫—Ü—ñ–π (http://latentflip.com/loupe/)
 * window.setTimeout(callback, delay);
 * window.setInterval(callback, delay);
 * –û—á–∏—â–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä–≤–∞–ª—ñ–≤ —Ç–∞ —Ç–∞–π–º—É—Ç—ñ–≤ clearInterval(intervalID), clearTimeout(timeoutID)
 */

// console.log('Start');

// const timeoutId = setTimeout(function () {
//   console.log('From setTimeout 1000');
// }, 1000);

// console.log(timeoutId);

// clearTimeout(timeoutId);

// const intervalId = setInterval(function () {
//   console.log('Hello from setInterval');
// }, 1000);

// console.log(intervalId);

// clearInterval(intervalId);

// console.log('End');

// ? ------ 02-date -----

//* –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –¥–∞—Ç–∏
// const date = new Date();

// console.dir(date.getTime());

// console.dir(Date.now());

//? –°—Ç–≤–æ—Ä—ñ—Ç—å –æ–±'—î–∫—Ç date –¥–ª—è –¥–∞—Ç–∏: 01 —Å—ñ—á–Ω—è 2025 —Ä–æ–∫—É, 12 –≥–æ–¥–∏–Ω 10 —Ö–≤–∏–ª–∏–Ω.

// const date1 = new Date('2025-01-01T12:10:00');

// console.log(date1);

// const date2 = new Date(2025, 0, 1, 12, 10);

// console.log(date2);

/*
? –°—Ç–≤–æ—Ä—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é getWeekDay(date), —è–∫–∞ –ø–æ–∫–∞–∑—É—î –¥–µ–Ω—å —Ç–∏–∂–Ω—è —É –∫–æ—Ä–æ—Ç–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ:
? '–ü–ù', '–í–¢', '–°–†', '–ß–¢', '–ü–¢', '–°–ë', '–ù–î'.
*/

// const getWeekDay = date => {
//   const daysArr = ['–ù–î', '–ü–ù', '–í–¢', '–°–†', '–ß–¢', '–ü–¢', '–°–ë'];

//   return daysArr[date.getDay()];
// };

// const dateNow = new Date('2025-01-05T12:00:00');

// console.log(getWeekDay(dateNow));

/*
? –°—Ç–≤–æ—Ä—ñ—Ç—å —Ñ—É–Ω–∫—É—ñ—é getLastDayOfMonth(year, month), —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –æ—Å—Ç–∞–Ω–Ω—î —á–∏—Å–ª–æ –º—ñ—Å—è—Ü—è. –Ü–Ω–∫–æ–ª–∏ —Ü–µ 30, 31 –∞–±–æ –Ω–∞–≤—ñ—Ç—å 28/29 —É –ª—é—Ç–æ–º—É.
? –ü–∞—Ä–∞–º–µ—Ç—Ä–∏:
? year ‚Äì —Ä—ñ–∫ –∑ —á–æ—Ç–∏—Ä—å–æ—Ö —Ü–∏—Ñ—Ä, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 2012.
? month ‚Äì –º—ñ—Å—è—Ü—å –≤—ñ–¥ 0 –¥–æ 11.
? –ù–∞–ø—Ä–∏–∫–ª–∞–¥, getLastDayOfMonth(2012, 1) = 29 (–≤–∏—Å–æ–∫–æ—Å–Ω–∏–π —Ä—ñ–∫, –ª—é—Ç–∏–π).
*/
// const getLastDayOfMonth = (year, month) => {
//   const date = new Date(year, month + 1, 0);

//   return date.getDate();
// };

// console.log(getLastDayOfMonth(2013, 3));

//? –°—Ç–≤–æ—Ä—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é getSecondsToTomorrow(), —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–µ–∫—É–Ω–¥ –¥–æ –∑–∞–≤—Ç—Ä–∞—à–Ω—å–æ–≥–æ –¥–Ω—è.
// const getSecondsToTomorrow = () => {
//   const dateNow = new Date();
//   const dateTomorrow = new Date(
//     dateNow.getFullYear(),
//     dateNow.getMonth(),
//     dateNow.getDate() + 1
//   );

//   const diff = dateTomorrow.getTime() - dateNow.getTime();

//   return Math.floor(diff / 1000);
// };

// console.log(getSecondsToTomorrow());

// ? ------ 03-timer -----

// const timer = {
//   deadline: new Date("2025-01-06T21:30:00"),
//   intervalId: null,
//   elements: {
//     days: document.querySelector(".js-timer__days"),
//     hours: document.querySelector(".js-timer__hours"),
//     minutes: document.querySelector(".js-timer__minutes"),
//     seconds: document.querySelector(".js-timer__seconds"),
//   },

//   start() {
//     this.intervalId = setInterval(() => {
//       const diff = this.deadline - Date.now();

//       if (diff <= 0) {
//         this.stop();

//         return;
//       }

//       const timeComponents = this.getTimeComponents(diff);

//       this.elements.days.textContent = this.pad(timeComponents.days);
//       this.elements.hours.textContent = this.pad(timeComponents.hours);
//       this.elements.minutes.textContent = this.pad(timeComponents.minutes);
//       this.elements.seconds.textContent = this.pad(timeComponents.seconds);
//     }, 1000);
//   },

//   stop() {
//     clearInterval(this.intervalId);
//   },

//   getTimeComponents(diff) {
//     const days = Math.floor(diff / 1000 / 60 / 60 / 24);
//     const hours = Math.floor(diff / 1000 / 60 / 60) % 24;
//     const minutes = Math.floor(diff / 1000 / 60) % 60;
//     const seconds = Math.floor(diff / 1000) % 60;

//     return {
//       days,
//       hours,
//       minutes,
//       seconds,
//     };
//   },

//   pad(value) {
//     return String(value).padStart(2, "0");
//   },
// };

// timer.start();

// ! module-02-lesson-1

// ! module-02-lesson-2

// ! module-03-lesson-1

// ! module-03-lesson-2

// ! module-04-lesson-1

// ! module-04-lesson-2

// ! module-05-lesson-1

// ! module-05-lesson-2

// ! module-06-lesson-1
// ? ----- 01-this -----
/*
 * –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó
 *
 * - –ö–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ this
 * - –ì–ª–æ–±–∞–ª—å–Ω–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
 * - –ö–æ–Ω—Ç–µ–∫—Å—Ç –º–µ—Ç–æ–¥—É –æ–±'—î–∫—Ç–∞
 */

//* –†–æ–∑–≥–ª—è–Ω–µ–º–æ —è–∫ this –ø–æ–≤–æ–¥–∏—Ç—å—Å—è –≤ –º–µ—Ç–æ–¥–∞—Ö
// const user = {
//   name: "Luis",
//   age: 30,

//   showThis: function () {
//     // let this = user;

//     console.log("This --->", this);
//   },

//   showName: function () {
//     // let this = user;

//     console.log(this.name);
//   },
// };

// user.showThis();
// user.showName();

//* –†–æ–∑–≥–ª—è–Ω–µ–º–æ —è–∫ this –ø–æ–≤–æ–¥–∏—Ç—å—Å—è —É –∑–≤–∏—á–∞–π–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ—è—Ö.
//? Function expression
// const showThis = function () {
//   console.log('This --->', this);
// };

// showThis();

//? Function declaration
// function showThis() {
//   console.log('This --->', this);
// }

// showThis();

//* –ü—Ä–∏—Å–≤–æ—î–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó —è–∫ –º–µ—Ç–æ–¥—É –æ–±'—î–∫—Ç–∞
// const showThis = function () {
//   console.log('This --->', this);
// };

// showThis();

// const showName = function () {
//   console.log(`Hello ${this.name}`);
// };

// const user = {
//   name: 'Luis',
//   age: 30,

//   // showUserThis: showThis,
//   showUserName: showName,
// };

// user.showUserThis();
// user.showUserName();

//* –í–∏–∫–ª–∏–∫ –º–µ—Ç–æ–¥—É –æ–±'—î–∫—Ç–∞ –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
// const user = {
//   name: 'Luis',
//   age: 30,

//   showUserThis: function () {
//     console.log('This --->', this);
//   },

//   showUserName: function () {
//     console.log(this.name);
//   },
// };

// const showThis = user.showUserThis;

// user.showUserThis();

// showThis();

//* This –≤ callback —Ñ—É–Ω–∫—Ü—ñ—è—Ö
// const user = {
//   name: 'Luis',
//   age: 30,

//   showThis: function () {
//     console.log('This --->', this);
//   },

//   showName: function () {
//     console.log(this.name);
//   },
// };

// const someFunction = callback => {
//   callback();
// };

// someFunction(user.showThis);

/*
 * This —É —Å—Ç—Ä—ñ–ª–æ—á–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ—è—Ö. –°—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –Ω–µ –º–∞—é—Ç—å —Å–≤–æ–≥–æ this,
 * this –≤ —Å—Ç—Ä—ñ–ª–∫–∞—Ö –∑–∞–≤–∂–¥–∏ –ø–æ—Å–∏–ª–∞—î—Ç—å—Å—è –Ω–∞ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π this.
 */
// const user = {
//   name: 'Luis',
//   age: 30,

//   showName: () => {
//     console.log(this.name);
//   },
// };

// user.showName();

// ? ----- 02-tasks -----
//? –©–æ –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ –≤ –∫–æ–Ω—Å–æ–ª—å
// const foo = function () {
//   console.log(this); // undefined
// };

// foo();

//? –©–æ –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ –≤ –∫–æ–Ω—Å–æ–ª—å
// const book = {
//   title: 'React for beginners',

//   showThis() {
//     console.log('showThis -> this', this); // undefined
//   },

//   showTitle() {
//     console.log('showTitle -> this.title', this.title); // Error
//   },
// };

// const outerShowThis = book.showThis;

// outerShowThis();

// const outerShowTitle = book.showTitle;

// outerShowTitle();

/*
? –¢—É—Ç —Ñ—É–Ω–∫—Ü—ñ—è makeUser –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç.
? –Ø–∫–∏–º –±—É–¥–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –¥–æ –æ–±'—î–∫—Ç–∞ ref? –ß–æ–º—É?
*/
// const makeUser = function () {
//   // let this = undefined;

//   return {
//     name: '–î–∂–æ–Ω',
//     ref: this,
//   };
// };

// const user = makeUser();

// console.log(user.ref.name); // Error

//? –©–æ –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ –≤ –∫–æ–Ω—Å–æ–ª—å
// const makeUser = function () {
//   return {
//     name: '–î–∂–æ–Ω',

//     ref() {
//       return this;
//     },
//   };
// };

// const user = makeUser();

// console.log(user.ref().name); // –î–∂–æ–Ω

/*
? –ù–∞–ø–∏—à—ñ—Ç—å –º–µ—Ç–æ–¥ calcTotalPrice(stoneName), —è–∫–∏–π –ø—Ä–∏–π–º–∞—î –Ω–∞–∑–≤—É –∫–∞–º–µ–Ω—é —ñ
? —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å –∫–∞–º–µ–Ω—ñ–≤ –∑ —Ç–∞–∫–∏–º —ñ–º'—è–º, —Ü—ñ–Ω–æ—é —Ç–∞
? –∫—ñ–ª—å–∫—ñ—Å—Ç—é –∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ stones.
 */
// const chopShop = {
//   stones: [
//     { name: 'Emerald', price: 1300, quantity: 4 },
//     { name: 'Diamond', price: 2700, quantity: 3 },
//     { name: 'Sapphire', price: 1400, quantity: 7 },
//     { name: 'Ruby', price: 800, quantity: 2 },
//   ],

//   calcTotalPrice(stoneName) {
//     const stone = this.stones.find(el => el.name.toLowerCase() === stoneName.toLowerCase());

//     if (stone === undefined) {
//       return `${stoneName} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!`;
//     }

//     return stone.price * stone.quantity;
//   },
// };

// console.log(chopShop.stones);

// console.log(chopShop.calcTotalPrice('Emerald')); // 5200
// console.log(chopShop.calcTotalPrice('Diamond')); // 8100
// console.log(chopShop.calcTotalPrice('Sapphire')); // 9800
// console.log(chopShop.calcTotalPrice('Ruby')); // 1600
// console.log(chopShop.calcTotalPrice('Aconit')); // Aconit –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!

// ? ----- 03-methods -----
/*
 * –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó
 *
 * - –ú–µ—Ç–æ–¥ call
 * - –ú–µ—Ç–æ–¥ apply
 * - –ú–µ—Ç–æ–¥ bind
 */

//* –§—É–Ω–∫—Ü—ñ—ó —Ü–µ –æ–±'—î–∫—Ç–∏ –∑—ñ —Å–≤–æ—ó–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ —Ç–∞ –º–µ—Ç–æ–¥–∞–º–∏
// const fn = function () {};

// fn.test = 10;

// console.dir(fn);

// console.log(fn.test);

//? –í–∏–∫–ª–∏—á—Ç–µ —Ñ—É–Ω–∫—Ü—ñ—é showFullName —É –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ –æ–±'—î–∫—Ç–∞ user
// const showFullName = function (message, num) {
//   // let this = user;

//   console.log(`${message} ${this.firstName} ${this.lastName}`);

//   console.log(num);
// };

// const user = {
//   firstName: 'Ernest',
//   lastName: 'Vasquez',
//   age: 30,
// };

// showFullName.call(user, 'Hello', 100);
// showFullName.apply(user, ['Hello', 100]);

// const anotherUser = {
//   firstName: 'Sophie',
//   lastName: 'Castro',
//   age: 32,
// };

// showFullName.call(anotherUser, 'Welcome');

//? –í–∏–∫–ª–∏—á—Ç–µ —Ñ—É–Ω–∫—Ü—ñ—é changeColor –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ —Ä—ñ–∑–Ω–∏—Ö –æ–± º—î–∫—Ç—ñ–≤
// const changeColor = function (color) {
//   this.color = color;
// };

// const hat = {
//   color: 'black',
// };

// console.log(hat);

// changeColor.call(hat, 'yellow');

// console.log(hat);

// const sweater = {
//   color: 'green',
// };

// console.log(sweater);

// changeColor.apply(sweater, ['blue']);

// console.log(sweater);

//? –°—Ç–≤–æ—Ä—ñ—Ç—å –∫–æ–ø—ñ—é —Ñ—É–Ω–∫—Ü—ñ—ó changeColor –∑ –ø—Ä–∏–≤ º—è–∑–∞–Ω–∏–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
// const changeColor = function (color) {
//   this.color = color;
// };

// const hat = {
//   color: 'black',
// };

// console.log(hat);

/*
function (color) {
  let this = hat;

  this.color = color;
};
*/

// const changeHatColor = changeColor.bind(hat);

// changeHatColor('yellow');

// console.log(hat);

// const sweater = {
//   color: 'green',
// };

// console.log(sweater);

//? –ü–µ—Ä–µ–¥–∞–π—Ç–µ –º–µ—Ç–æ–¥ –æ–± º—î–∫—Ç–∞ –≤ —è–∫–æ—Å—Ç—ñ callback —Ñ—É–Ω–∫—Ü—ñ—ó
// const user = {
//   name: 'Luis',
//   age: 30,

//   showThis() {
//     console.log('This --->', this);
//   },

//   showName() {
//     console.log(this.name);
//   },
// };

// const someFunction = callback => {
//   // let callback = function () {
//   // let this = user;

//   // console.log(this.name);
//   // }

//   callback();
// };

// someFunction(user.showName.bind(user));

//
// const sum = function () {
//   return [].reduce.call(arguments, (acc, el) => acc + el, 0);
// };

// console.log(sum(1, 2, 3, 4));
// console.log(sum(10, 20));

// ! module-06-lesson-2
// ? ----- 01-prototype -----
/*
 * –ü—Ä–æ—Ç–æ—Ç–∏–ø –æ–±'—î–∫—Ç–∞
 *
 * - Object.create()
 * - –í–ª–∞—Å–Ω—ñ —ñ –Ω–µ–≤–ª–∞—Å–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ
 * - –ü–µ—Ä–µ–±—ñ—Ä –≤–ª–∞—Å–Ω–∏—Ö –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –∑ hasOwnProperty()
 * - –õ–∞–Ω—Ü—é–∂–∫–∏ –ø—Ä–æ—Ç–æ—Ç–∏–ø—ñ–≤
 */

// const userMethods = {
//   getFullName() {
//     return `${this.firstName} ${this.lastName}`;
//   },
// };

// const user = Object.create(userMethods);

// user.firstName = 'Nell';
// user.lastName = 'Fitzgerald';
// user.age = 30;

// console.log(user);
// console.log(user.getFullName());

// const anotherUser = Object.create(userMethods);

// anotherUser.firstName = 'Marguerite';
// anotherUser.lastName = 'Jones';
// anotherUser.age = 25;

// console.log(anotherUser);
// console.log(anotherUser.getFullName());

/*
 * –ü–µ—Ä–µ–±—ñ—Ä –≤–ª–∞—Å–Ω–∏—Ö –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –∑ hasOwnProperty()
 */
// const objC = {
//   c: 'Object c',
// };

// const objB = Object.create(objC);

// objB.b = 'Object b';

// const objA = Object.create(objB);

// objA.a = 'Object a';

// console.log(objA);

// for (const key in objA) {
//   if (objA.hasOwnProperty(key)) {
//     console.log(key);
//   }
// }

// console.log(objA.hasOwnProperty);

// ? ----- 02-class -----
/*
 * –ö–ª–∞—Å–∏
 *  - –û–≥–æ–ª–æ—à–µ–Ω–Ω—è –∫–ª–∞—Å—É
 *  - –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—É
 *  - –ú–µ—Ç–æ–¥–∏ –∫–ª–∞—Å—É
 *  - –ü—Ä–æ—Ç–æ—Ç–∏–ø –µ–∫–∑–µ–º–ø–ª—è—Ä—É
 *  - –ü—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ
 *  - –ì–µ—Ç—Ç–µ—Ä–∏ —ñ —Å–µ—Ç—Ç–µ—Ä–∏
 *  - –°—Ç–∞—Ç–∏—á–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ
 */

// class User {
//   #password;
//   #login;

//   static test = 10;

//   constructor(firstName, lastName, login, password) {
//     // let this = {};
//     this.firstName = firstName;
//     this.lastName = lastName;
//     this.#login = login;
//     this.#password = password;
//     // return this;
//   }

//   getFullName() {
//     return `${this.firstName} ${this.lastName}`;
//   }

//   getPassword() {
//     return this.#password;
//   }

//   setPassword(newPassword) {
//     this.#password = newPassword;
//   }

//   get login() {
//     return this.#login;
//   }

//   set login(newLogin) {
//     this.#login = newLogin;
//   }
// }

// const user = new User('Josephine', 'Arnold', 'test@gmail.com', 'qwerty123');

// console.log(user);
// console.dir(User);

// console.log(user.getFullName());

// console.log(user.getPassword());
// user.setPassword('newpassword');
// console.log(user.getPassword());

// console.log(user.login);
// user.login = 'newLogin@gmail.com';
// console.log(user.login);

// const anotherUser = new User('Harold', 'McBride', 'test2@gmail.com', 'qwerty123321');

// console.log(anotherUser);
// console.log(anotherUser.getFullName());

// ? ----- 03-bloger -----
/*
? –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Blogger –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ –±–ª–æ–≥–µ—Ä–∞ –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏:
? - email - –ø–æ—à—Ç–∞, —Ä—è–¥–æ–∫
? - age - –≤—ñ–∫, —á–∏—Å–ª–æ
? - numberOfPosts - –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —á–∏—Å–ª–æ
? - topics - –º–∞—Å–∏–≤ —Ç–µ–º –Ω–∞ —è–∫–∏—Ö —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –±–ª–æ–≥–µ—Ä
?
? –ö–ª–∞—Å —á–µ–∫–∞—î 4 –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ - email, age, numberOfPosts, topics.
?
? - –î–æ–¥–∞–π –º–µ—Ç–æ–¥ getInfo(), —è–∫–∏–π, –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫: Blogger ${email} is ${age} years old and has ${numPosts} posts.
? - –î–æ–¥–∞–π –º–µ—Ç–æ–¥ updatePostCount(value), —è–∫–∏–π —É –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ value –ø—Ä–∏–π–º–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —è–∫—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ.
 */

// class Blogger {
//   constructor(email, age, numberOfPosts, topics) {
//     // let this = {};
//     this.email = email;
//     this.age = age;
//     this.numberOfPosts = numberOfPosts;
//     this.topics = topics;
//     // return this;
//   }

//   getInfo() {
//     return `Blogger ${this.email} is ${this.age} years old and has ${this.numberOfPosts} posts.`;
//   }

//   updatePostCount(value) {
//     this.numberOfPosts += value;
//   }
// }

// const mango = new Blogger('mango@mail.com', 24, 20, ['tech', 'cooking']);

// console.log(mango);

// console.log(mango.getInfo()); // Blogger mango@mail.com is 24 years old and has 20 posts
// mango.updatePostCount(5);
// console.log(mango.getInfo()); // Blogger mango@mail.com is 24 years old and has 25 posts

// const poly = new Blogger('poly@mail.com', 19, 17, ['sports', 'gaming']);

// console.log(poly);

// console.log(poly.getInfo()); // Blogger poly@mail.com is 19 years old and has 17 posts
// poly.updatePostCount(4);
// console.log(poly.getInfo()); // Blogger poly@mail.com is 19 years old and has 21 posts

// ? ----- 04-user -----
/*
? –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å User —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ login —Ç–∞ email.
? –û–≥–æ–ª–æ—Å–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ #login —Ç–∞ #email, –¥–æ—Å—Ç—É–ø –¥–æ —è–∫–∏—Ö –∑—Ä–æ–±–∏ —á–µ—Ä–µ–∑
? –≥–µ—Ç–µ—Ä —Ç–∞ —Å–µ—Ç–µ—Ä login —Ç–∞ email.
 */

// const mango = new User('Mango', 'mango@dog.woof');

// console.log(mango);

// console.log(mango.login); // Mango
// mango.login = 'Mangodoge';
// console.log(mango.login); // Mangodoge

// console.log(mango.email); // mango@dog.woof
// mango.email = 'gaatke@fucvod.com';
// console.log(mango.email); // gaatke@fucvod.com

// const poly = new User('Poly', 'poly@mail.com');

// console.log(poly);

// console.log(poly.login); // Poly
// poly.login = 'Polycutie';
// console.log(poly.login); // Polycutie

// ! module-07-lesson-1
// ? ----- 01-selectors -----
/*
 * –ü–æ—à—É–∫ HTML –µ–ª–µ–º–µ–Ω—Ç—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é querySelector —Ç–∞ querySelectorAll
 * - –ó–∞ –Ω–∞–∑–≤–æ—é —Ç–µ–≥—É
 * - –ó–∞ –Ω–∞–∑–≤–æ—é –∫–ª–∞—Å—É
 * - –ó–∞ ID
 */

// const magicBtnEl = document.querySelector('body button');

// console.dir(magicBtnEl);

// const siteNavListEl = document.querySelector('.js-site-nav');

// console.dir(siteNavListEl);

// const siteNavLinksEl = document.querySelectorAll('.js-site-nav-link');

// console.log(siteNavLinksEl);

/*
 * –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ ¬´–Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó¬ª –ø–æ DOM-–≤—É–∑–ª–∞—Ö
 */
// const siteNavListEl = document.querySelector('.js-site-nav');

// console.dir(siteNavListEl);

// ? ----- 02-properties -----
/*
 * –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –µ–ª–µ–º–µ–Ω—Ç–∞
 * - –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è
 * - –¢–µ–∫—Å—Ç —Ç–∞ textContent
 * https://images.pexels.com/photos/1870376/pexels-photo-1870376.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=480
 */

// const imgEl = document.querySelector('.js-hero-image');

// console.dir(imgEl);

// imgEl.alt = 'Cat';
// imgEl.src = 'https://images.pexels.com/photos/1870376/pexels-photo-1870376.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=480';

// console.log(imgEl.src);

// const titleEl = document.querySelector('.js-hero-title');

// console.dir(titleEl);

// titleEl.textContent = 'About cat';

// const inputEl = document.querySelector('.js-input');

// console.dir(inputEl);

// console.log(inputEl.value);

/*
 * –ê—Ç—Ä–∏–±—É—Ç–∏
 * - get(—ñ–º'—è-–∞—Ç—Ä–∏–±—É—Ç–∞)
 * - set(—ñ–º'—è-–∞—Ç—Ä–∏–±—É—Ç–∞, –∑–Ω–∞—á–µ–Ω–Ω—è-–∞—Ç—Ä–∏–±—É—Ç–∞)
 * - remove(—ñ–º'—è-–∞—Ç—Ä–∏–±—É—Ç–∞)
 * - has(—ñ–º'—è-–∞—Ç—Ä–∏–±—É—Ç–∞)
 */
// const imgEl = document.querySelector('.js-hero-image');

// console.dir(imgEl);

// console.log(imgEl.getAttribute('src'));
// console.log(imgEl.src);

// imgEl.setAttribute('alt', 'It`s cat');
// imgEl.alt = 'It`s cat';

// imgEl.removeAttribute('width');

// console.log(imgEl.hasAttribute('width'));

// ? ----- 03-classlist -----
/*
 * –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å classList
 * - add
 * - remove
 * - toggle
 * - replace
 * - contains
 */

//* –†–æ–±–æ—Ç–∞ –∑ —ñ–Ω–ª–∞–π–Ω–æ–≤–∏–º–∏ —Å—Ç–∏–ª—è–º–∏
// const navLinkEl = document.querySelector('.js-site-nav-link');

// console.dir(navLinkEl);

// navLinkEl.style.color = 'teal';
// navLinkEl.style.backgroundColor = 'tomato';

//* –†–æ–±–æ—Ç–∞ –∑ –∫–ª–∞—Å–∞–º–∏
// const navLinkEl = document.querySelector('.js-site-nav-link');

// console.dir(navLinkEl);

// navLinkEl.classList.add('is-open');
// navLinkEl.classList.remove('is-open');

// console.log(navLinkEl.classList.contains('js-site-nav-link'));
// navLinkEl.classList.replace('js-site-nav-link', 'is-open');

// navLinkEl.classList.toggle('is-open');
// navLinkEl.classList.toggle('is-open');

// if (navLinkEl.classList.contains('is-open')) {
//   navLinkEl.classList.remove('is-open');
// } else {
//   navLinkEl.classList.add('is-open');
// }

// const backdropEl = document.querySelector('.js-backdrop');

// console.log(backdropEl);

// backdropEl.classList.add('is-open');

// ? ----- 04-create -----
/*
 * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
 */

/*
<li class="gallery-item">
  <a href="#">
    <img src="https://picsum.photos/id/237/200/300" alt="Labrador">
  </a>
</li>
*/

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è li
// const galleryItemEl = document.createElement('li');

// galleryItemEl.classList.add('gallery-item', 'js-gallery-item');

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è a
// const galleryLinkEl = document.createElement('a');

// galleryLinkEl.classList.add('js-gallery-link');
// galleryLinkEl.href = '#';

// galleryItemEl.append(galleryLinkEl);

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è img
// const galleryImgEl = document.createElement('img');

// galleryImgEl.src = 'https://picsum.photos/id/237/200/300';
// galleryImgEl.alt = 'Labrador';

// galleryLinkEl.append(galleryImgEl);

// –í—Å—Ç–∞–≤–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
// const galleryListEl = document.querySelector('.js-gallery');

// galleryListEl.append(galleryItemEl);

// ? ----- 05-collections -----
/*
 * –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞ –¥–æ–¥–∞—î–º–æ –∫–æ–ª–µ–∫—Ü—ñ—é
 */
const pictures = [
  {
    width: 700,
    height: 460,
    url: "https://picsum.photos/id/0/700/460",
    alt: "laptop",
  },
  {
    width: 700,
    height: 460,
    url: "https://picsum.photos/id/1/700/460",
    alt: "developer",
  },
  {
    width: 700,
    height: 460,
    url: "https://picsum.photos/id/10/700/460",
    alt: "forest",
  },
  {
    width: 700,
    height: 460,
    url: "https://picsum.photos/id/100/700/460",
    alt: "beach",
  },
  {
    width: 700,
    height: 460,
    url: "https://picsum.photos/id/1000/700/460",
    alt: "mountain",
  },
];

/*
<li class="gallery-item">
  <a href="#">
    <img src="" alt="" width="" height="">
  </a>
</li>
*/

//* –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ä—Ç–æ—á–∫–∏ createGalleryCard(cardInfo)
// const createGalleryCard = pictureInfo => {
// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è li
//   const galleryItemEl = document.createElement('li');

//   galleryItemEl.classList.add('gallery-item');

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è a
//   const galleryLinkEl = document.createElement('a');

//   galleryLinkEl.href = '#';

//   galleryItemEl.append(galleryLinkEl);

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è img
//   const galleryImgEl = document.createElement('img');

//   galleryImgEl.src = pictureInfo.url;
//   galleryImgEl.alt = pictureInfo.alt;
//   galleryImgEl.width = pictureInfo.width;
//   galleryImgEl.height = pictureInfo.height;

//   galleryLinkEl.append(galleryImgEl);

//   return galleryItemEl;
// };

//* –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–∞—Å–∏–≤—É –µ–ª–º–µ–Ω—Ç—ñ–≤
// const galleryCardsArr = pictures.map(picture => createGalleryCard(picture));

// console.log(galleryCardsArr);

// //* –í—Å—Ç–∞–≤–∫–∞ –∫–æ–ª–µ–∫—Ü—ñ—ó –∫–∞—Ä—Ç–æ–∫ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
// const galleryListEl = document.querySelector('.js-gallery');

// galleryListEl.append(...galleryCardsArr);

// ? ----- 06-templating -----
//* –†—ñ–∑–Ω–∏—Ü—è –º—ñ–∂ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ textContent —Ç–∞ innerHTML
// const titleEl = document.querySelector('.js-title');

// titleEl.textContent = '<span>My</span> gallery!';
// titleEl.innerHTML = '<span>My</span> gallery!';

// const pictures = [
//   {
//     width: 700,
//     height: 460,
//     url: 'https://picsum.photos/id/0/700/460',
//     alt: 'laptop',
//   },
//   {
//     width: 700,
//     height: 460,
//     url: 'https://picsum.photos/id/1/700/460',
//     alt: 'developer',
//   },
//   {
//     width: 700,
//     height: 460,
//     url: 'https://picsum.photos/id/10/700/460',
//     alt: 'forest',
//   },
//   {
//     width: 700,
//     height: 460,
//     url: 'https://picsum.photos/id/100/700/460',
//     alt: 'beach',
//   },
//   {
//     width: 700,
//     height: 460,
//     url: 'https://picsum.photos/id/1000/700/460',
//     alt: 'mountain',
//   },
// ];

// /*
// <li class="gallery-item">
//   <a href="#">
//     <img src="" alt="" width="" height="">
//   </a>
// </li>
// */

// //* –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ä—Ç–æ—á–∫–∏ createGalleryCard(cardInfo)
// const createGalleryCard = pictureInfo => {
//   //* –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è —à–∞–±–ª–æ–Ω–æ–≥–æ —Ä—è–¥–∫–∞ –∑ —Ä–æ–∑–º—ñ—Ç–∫–æ—é
//   return `
//     <li class="gallery-item">
//       <a href="#">
//         <img src="${pictureInfo.url}" alt="${pictureInfo.alt}" width="${pictureInfo.width}" height="${pictureInfo.height}">
//       </a>
//     </li>
//   `;
// };

// //* –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–∞—Å–∏–≤—É —Ä—è–¥–∫—ñ–≤ —ñ–∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏
// const galleryCardsTemplate = pictures.map(picture => createGalleryCard(picture)).join('');

// //* –í—Å—Ç–∞–≤–∫–∞ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É (innerHTML/insertAdjacentHTML)
// const galleryListEl = document.querySelector('.js-gallery');

// // galleryListEl.innerHTML = galleryCardsTemplate;
// galleryListEl.insertAdjacentHTML('beforeend', galleryCardsTemplate);

// ! module-07-lesson-2
// ? ----- 01-events -----
/*
 * –ü–æ–¥—ñ—è —Ålick
 *
 * - –Ü–º–µ–Ω—É–≤–∞–Ω–Ω—è –∫–æ–ª–±–µ–∫—ñ–≤ –¥–ª—è —Å–ª—É—Ö–∞—á—ñ–≤
 * - handle*: handleSubjectEvent
 * - *Handler: subjectEventHandler
 * - on*: onSubjectEvent
 */

/*
? –ù–∞—Ç–∏—Å–∫–∞—é—á–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "Click me" –∑–º—É—Å—å
? —á–µ—Ä–≤–æ–Ω–∏–π –∫–≤–∞–¥—Ä–∞—Ç–∏–∫ –∑–º—ñ—â—É–≤–∞—Ç–∏—Å—å –Ω–∞ 50px –ø–æ –¥—ñ–∞–≥–æ–Ω–∞–ª—ñ
*/

// const btnEl = document.querySelector('.js-click');
// const resetBtnEl = document.querySelector('.js-reset');
// const boxEl = document.querySelector('.js-box');

// let step = 0;

// const handleBtnClick = () => {};

// const btnClickHandler = () => {};

// const onBtnClick = () => {
//   step += 50;

//   boxEl.style.transform = `translate(${step}px, ${step}px)`;

//   if (step === 200) {
//     btnEl.removeEventListener('click', onBtnClick);
//   }
// };

// const onResetBtnClick = () => {
//   step = 0;

//   boxEl.style.transform = `translate(${step}px, ${step}px)`;

//   btnEl.addEventListener('click', onBtnClick);
// };

// btnEl.addEventListener('click', onBtnClick);
// resetBtnEl.addEventListener('click', onResetBtnClick);

// ? ----- 02-input -----
/*
 * - –ü–æ–¥—ñ—è input
 * - –ü–æ–¥—ñ—è blur
 * - –ü–æ–¥—ñ—è change
 */

// const fieldEl = document.querySelector('.js-user-name');
// const checkboxPolicyEl = document.querySelector('.js-policy-checkbox');

/*
? –í–∏–≤–æ–¥—å –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å –≤ input
*/

// fieldEl.addEventListener('input', () => {
//   console.log(fieldEl.value);
// });

/*
? –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å –≤ input —Å–≤–æ—î —ñ–º'—è –ø—ñ—Å–ª—è –≤—Ç—Ä–∞—Ç–∏
? —Ñ–æ–∫—É—Å—É –æ—Ç—Ä–∏–º—É—î alert –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º-–ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è–º
 */

// fieldEl.addEventListener('blur', () => {
//   const fieldValue = fieldEl.value;

//   if (fieldValue === '') {
//     alert('–ü–æ–ª–µ –∑ —ñ–º º—è–º –º–∞—î –±—É—Ç–∏ –∑–∞–ø–æ–≤–Ω–µ–Ω–æ!');

//     return;
//   }

//   alert(`–í—ñ—Ç–∞—î–º–æ ${fieldValue}`);
// });

// fieldEl.addEventListener('change', () => {
//   const fieldValue = fieldEl.value;

//   if (fieldValue === '') {
//     alert('–ü–æ–ª–µ –∑ —ñ–º º—è–º –º–∞—î –±—É—Ç–∏ –∑–∞–ø–æ–≤–Ω–µ–Ω–æ!');
//     return;
//   }

//   alert(`–í—ñ—Ç–∞—î–º–æ ${fieldValue}`);
// });

/*
? –ü—ñ—Å–ª—è —Ç–æ–≥–æ, —è–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–∫—Ç–∏–≤—É—î —á–µ–∫–±–æ–∫—Å, –≤–∏–≤–æ–¥–∏—Ç—å—Å—è alert
*/

// checkboxPolicyEl.addEventListener('change', () => {
//   if (checkboxPolicyEl.checked) {
//     alert('Done!');
//   }
// });

// ? ----- 03-forms -----
/*
 * - –ü–æ–¥—ñ—è submit
 * - –î—ñ—ó –±—Ä–∞—É–∑–µ—Ä–∞ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
 * - –í–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å elements
 */

/*
? –û–±—Ä–æ–±–∏ —Ñ–æ—Ä–º—É —Ç–∞ –∑–±–µ—Ä–µ–∂–∏ –≤—ñ–¥–≥—É–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –æ–±'—î–∫—Ç
*/
// const formEl = document.querySelector('.js-feedback-form');

// formEl.addEventListener('submit', event => {
//   event.preventDefault();

// const { email: emailEl, password: passwordEl, comment: commentEl } = formEl.elements;

// console.log(emailEl);
// console.log(passwordEl);
// console.log(commentEl);

//   const formData = {
//     [formEl.elements.email.name]: formEl.elements.email.value,
//     [formEl.elements.password.name]: formEl.elements.password.value,
//     [formEl.elements.comment.name]: formEl.elements.comment.value,
//   };

//   console.log(formData);

//   formEl.reset();
// });

// ? ----- 04-keyboard -----
/*
 * –¢–∏–ø–∏ –ø–æ–¥—ñ–π: keypress, keydown, keyup
 * - –û–±–º–µ–∂–µ–Ω–Ω—è keypress
 * - –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ key —Ç–∞ code
 */

// document.addEventListener('keyup', event => {
//   console.log(`event.code: ${event.code}, event.key: ${event.key}`);
// });

// document.addEventListener('keydown', event => {
//   if ((event.metaKey || event.ctrlKey) && event.code === 'KeyF') {
//     event.preventDefault();

//     console.log('Done!');
//   }
// });

// ! module-08-lesson-1
// ? ----- 01-bubbling -----
/*
 * –°–ø–ª–∏–≤–∞–Ω–Ω—è –ø–æ–¥—ñ–π
 * event.target - —Ü—ñ–ª—å–æ–≤–∏–π (–≤–∏—Ö—ñ–¥–Ω–∏–π) –µ–ª–µ–º–µ–Ω—Ç
 * event.currentTarget - –ø–æ—Ç–æ—á–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç, –Ω–∞ —Å–ª—É—Ö–∞—á—ñ —è–∫–æ–≥–æ —Å–ø—ñ–π–º–∞–ª–∏ –ø–æ–¥—ñ—é
 */

// const parentEl = document.querySelector('.js-parent');
// const childEl = document.querySelector('.js-child');
// const innerChildEl = document.querySelector('.js-inner-child');

// parentEl.addEventListener('click', event => {
//   console.group('Execution parent handler function!');
//   console.log(`event.target: `, event.target);
//   console.log('event.currentTarget', event.currentTarget);
//   console.groupEnd();
// });

// childEl.addEventListener('click', event => {
//   console.group('Execution child handler function!');
//   console.log(`event.target: `, event.target);
//   console.log('event.currentTarget', event.currentTarget);
//   console.groupEnd();
// });

// innerChildEl.addEventListener('click', event => {
//   console.group('Execution inner child handler function!');
//   console.log(`event.target: `, event.target);
//   console.log('event.currentTarget', event.currentTarget);
//   console.groupEnd();
// });

// ? ----- 02-delegation -----
/*
 * –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–æ—Å–ª—É—Ö–æ–≤—É–≤–∞—á–∞ –ø–æ–¥—ñ–π –Ω–∞ –∫–æ–∂–µ–Ω –µ–ª–µ–º–µ–Ω—Ç
 */

//? –û—Ç—Ä–∏–º–∞–π –∫–æ–ª—ñ—Ä –∫–≤–∞–¥—Ä–∞—Ç–∞ –ø–æ —è–∫–æ–º—É –±—É–ª–æ –∑–¥—ñ–π—Å–Ω–µ–Ω–æ –∫–ª—ñ–∫

// const boxesElements = document.querySelectorAll('.js-box');

// console.dir(boxesElements[1]);

// boxesElements.forEach(el => {
//   el.addEventListener('click', event => {
//     console.log(event.target.dataset.color);
//   });
// });

/*
 * –î–µ–≥–µ–≥—É–≤–∞–Ω–Ω—è –ø–æ–¥—ñ–π
 */

//? –û—Ç—Ä–∏–º–∞–π –∫–æ–ª—ñ—Ä –∫–≤–∞–¥—Ä–∞—Ç–∞ –ø–æ —è–∫–æ–º—É –±—É–ª–æ –∑–¥—ñ–π—Å–Ω–µ–Ω–æ –∫–ª—ñ–∫
// const containerEl = document.querySelector('.js-container');

// containerEl.addEventListener('click', event => {
//   if (event.target === event.currentTarget) {
//     return;
//   }

//   console.log(event.target.dataset.color);
// });

// ? ----- 03-prodcuts -----
/*
 * –°—Ç–≤–æ—Ä–∏ –∫–∞—Ä—Ç–∫–∏ –∑ —Ç–æ–≤–∞—Ä–∞–º–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –º–∞—Å–∏–≤—É products
 *
 * –†–µ–∞–ª—ñ–∑—É–π –¥–µ–ª–µ–≥—É–≤–∞–Ω–Ω—è –ø–æ–¥—ñ–π –Ω–∞ –∫–æ–ª–µ–∫—Ü—ñ—ó –∫–∞—Ä—Ç–æ–∫
 * –ü—ñ—Å–ª—è –∫–ª—ñ–∫—É –Ω–∞ –∫–∞—Ä—Ç–∫—É –ø–æ–≤–∏–Ω–Ω–æ –∑'—è–≤–ª—è—Ç–∏—Å—å –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
 * –∑ –¥–µ—Ç–∞–ª—å–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –ø—Ä–æ–¥—É–∫—Ç.
 *
 * –î–ª—è —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π
 * –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É basicLightbox (https://github.com/electerious/basicLightbox)
 */

//* Product card template
/*
<li class="product-card js-product-card">
  <img src="" alt="" class="product-card-img" />
  <div class="product-card-text-content">
    <h2 class="product-card-title"></h2>
    <p class="product-card-price">Price: uah.</p>
  </div>
</li>
*/

//* Modal card template
/*
<img class="product-modal-img" src="" alt="" />
<div class="product-modal-text-content">
  <h2 class="product-modal-title"></h2>
  <p class="product-modal-price">Price: uah.</p>
  <p class="product-modal-desc"></p>
</div>
*/

// const products = [
//   {
//     id: 1,
//     img: 'https://www.vodafone.ua/shop/media/wysiwyg/novosti/Capture_1_large.JPG',
//     name: 'Monitor',
//     price: 3000,
//     description: '23-inch monitor with Full HD resolution.',
//   },
//   {
//     id: 2,
//     img: 'https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcTzWqRMI3HQiDfICHAmbArmaP4uOOIjfz0sDITv0dfkpb0mbbgX',
//     name: 'Laptop',
//     price: 20000,
//     description: 'Lightweight and powerful laptop with a 15-inch display and SSD.',
//   },
//   {
//     id: 3,
//     img: 'https://cdn.27.ua/799/66/39/6841913_1.jpeg',
//     name: 'Smartphone',
//     price: 8000,
//     description: 'Equipped with a triple camera and a multi-core processor.',
//   },
//   {
//     id: 4,
//     img: 'https://cdn.27.ua/799/b6/16/4371990_1.jpeg',
//     name: 'Tablet',
//     price: 12000,
//     description: '10-inch tablet with high performance and a Retina display.',
//   },
// ];

// const createProductCardTemplate = product => {
//   return `
//     <li class="product-card js-product-card" data-id="${product.id}">
//       <img src="${product.img}" alt="${product.name}" class="product-card-img"/>
//       <div class="product-card-text-content">
//         <h2 class="product-card-title">${product.name}</h2>
//         <p class="product-card-price">Price: ${product.price}uah.</p>
//       </div>
//     </li>
//   `;
// };

// const productsCardTemplate = products.map(el => createProductCardTemplate(el)).join('');

// const productsListEl = document.querySelector('.js-products');

// productsListEl.innerHTML = productsCardTemplate;

// productsListEl.addEventListener('click', event => {
//   if (event.target === event.currentTarget) {
//     return;
//   }

//   const productCardEl = event.target.closest('.js-product-card');

//   const productId = Number(productCardEl.dataset.id);

//   const productInfo = products.find(el => el.id === productId);

//   const modalWindowInstance = basicLightbox.create(
//     `
//     <img class="product-modal-img" src="${productInfo.img}" alt="${productInfo.name}" />
//     <div class="product-modal-text-content">
//       <h2 class="product-modal-title">${productInfo.name}</h2>
//       <p class="product-modal-price">Price: ${productInfo.price}uah.</p>
//       <p class="product-modal-desc">${productInfo.description}</p>
//     </div>
//     `,
//     {
//       closable: true,
//       className: 'our-class',

//       onShow() {
//         console.log('Modal show!');
//       },

//       onClose() {
//         console.log('Modal close');
//       },
//     }
//   );

//   modalWindowInstance.show();
// });

// ! module-08-lesson-2
// ? ----- 01-basic -----
/*
 * –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –æ–±'—î–∫—Ç–∞
 */

/*
? –ù–∞–ø–∏—à—ñ—Ç—å –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä—É—é—á–µ –ø—Ä–∏—Å–≤–æ—î–Ω–Ω—è, —è–∫–µ:
? –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å firstName –ø—Ä–∏—Å–≤–æ—î –¥–æ –∑–º—ñ–Ω–Ω–æ—ó firstName.
? –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å lastName –ø—Ä–∏—Å–≤–æ—î –¥–æ –∑–º—ñ–Ω–Ω–æ—ó lastName.
? –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å age –ø—Ä–∏—Å–≤–æ—î –¥–æ –∑–º—ñ–Ω–Ω–æ—ó userAge.
? –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å isAdmin –ø—Ä–∏—Å–≤–æ—î –¥–æ –∑–º—ñ–Ω–Ω–æ—ó isAdmin (false, —è–∫—â–æ –Ω–µ–º–∞—î —Ç–∞–∫–æ—ó –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ)
*/

// const user = {
//   firstName: 'John',
//   lastName: 'Reese',
//   age: 30,
//   // isAdmin: true,
// };

// console.log(user);

// const firstName = user.firstName;
// const lastName = user.lastName;

// const { firstName, lastName, age: userAge, isAdmin = false } = user;

// console.log('firstName:', firstName);
// console.log('lastName:', lastName);
// console.log('userAge:', userAge);
// console.log('isAdmin:', isAdmin);

/*
 * –ì–ª–∏–±–æ–∫–∞ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –æ–±'—î–∫—Ç–∞
 */

//? –ë–µ–∑ –≥–ª–∏–±–æ–∫–æ—ó –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—ó

// const user = {
//   username: 'Jacob name',
//   skills: {
//     html: true,
//     css: false,
//     js: true,
//   },
// };

// console.log(user);

// const { username, skills } = user;
// const { html, css, js } = skills;

// console.log('username:', username);
// console.log('skills:', skills);
// console.log('html:', html);
// console.log('css:', css);
// console.log('js:', js);

//? –ó –≥–ª–∏–±–æ–∫–æ—é –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—î—é

// const user = {
//   username: 'Jacob name',
//   skills: {
//     html: true,
//     css: false,
//     js: true,
//   },
// };

// console.log(user);

// const {
//   username,
//   skills: { html, css, js },
// } = user;

// console.log('username:', username);
// console.log('html:', html);
// console.log('css:', css);
// console.log('js:', js);

/*
 * –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –º–∞—Å–∏–≤–∞
 */

//? ====================
// const fullNames = ['Herbert Todd', 'Belle Soto', 'Roger Marsh', 'Ethan Lindsey'];

// console.log(fullNames);

// const fullName1 = fullNames[0];
// const fullName2 = fullNames[1];

// const [fullName1, , fullName3] = fullNames;

// console.log('fullName1:', fullName1);
// console.log('fullName2:', fullName2);
// console.log('fullName3:', fullName3);

//? ====================
// const getUserCoordinate = () => {
//   const longitude = 50.426857;
//   const latitude = 30.56368;

//   return [longitude, latitude];
// };

// console.log(getUserCoordinate());

// const userCoordinate = getUserCoordinate();

// console.log(userCoordinate[0]);
// console.log(userCoordinate[1]);

// const [lon, lat] = getUserCoordinate();

// console.log('lon:', lon);
// console.log('lat:', lat);

//* –û–ø–µ—Ä–∞—Ü—ñ—è rest –ø—Ä–∏ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—ó

// const user = {
//   firstName: 'John',
//   lastName: 'Reese',
//   age: 30,
//   isAdmin: true,
// };

// console.log(user);

// const { firstName, lastName, ...otherProps } = user;

// console.log('firstName:', firstName);
// console.log('lastName:', lastName);
// console.log('otherProps:', otherProps);

// ? ----- 02-params -----
/*
 * –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –æ–±'—î–∫—Ç–∞ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö —Ñ—É–Ω–∫—Ü—ñ—ó
 */

// const user = {
//   username: "Jacob",
//   skills: {
//     html: true,
//     css: false,
//     js: true,
//   },
// };

//? –ë–µ–∑ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—ó

// function getUserName(obj) {
//   console.log(
//     `Hello my name is ${obj.username}, I know html - ${obj.skills.html}, css - ${obj.skills.css} and js -${obj.skills.js}`
//   );
// }

// getUserName(user);

//? –ó –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—î—é

// function getUserName(obj) {
//   const {
//     username,
//     skills: { html, css, js },
//   } = obj;

//   console.log(`Hello my name is ${username}, I know html - ${html}, css - ${css} and js -${js}`);
// }

// getUserName(user);

//? –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö —Ñ—É–Ω–∫—Ü—ñ—ó

// const user = {
//   username: 'Jacob',
//   skills: {
//     html: true,
//     css: false,
//     js: true,
//   },
// };

// function getUserName({ username, skills: { html, css, js } }, num1, num2) {
//   // let { username, skills: { html, css, js } } = user;
//   // let num1 = 10;
//   // let num2 = 20;

//   console.log(`Hello my name is ${username}, I know html - ${html}, css - ${css} and js -${js}`);
//   console.log(num1);
//   console.log(num2);
// }

// getUserName(user, 10, 20);

// ? ----- 03-loops -----
/*
 * –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –æ–±'—î–∫—Ç–∞ –≤ —Ü–∏–∫–ª—ñ
 */

// const users = [
//   {
//     username: "Kate",
//   },
//   {
//     username: "Alex",
//   },
//   {
//     username: "Mark",
//   },
// ];

// console.log(users);

/*
 ? –ë–µ–∑ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—ó
 */

// for (const user of users) {
//   console.log(user.username);
// }

/*
 ? –ó –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—î—é
 */

// for (const { username } of users) {
//   // 1 –Ü—Ç–µ—Ä–∞—Ü—ñ—è
//   // const { username } = {username: 'Kate',}

//   // 2 –Ü—Ç–µ—Ä–∞—Ü—ñ—è
//   // const { username } = {username: 'Alex',}

//   // 3 –Ü—Ç–µ—Ä–∞—Ü—ñ—è
//   // const { username } = {username: 'Mark',}

//   console.log(username);
// }

// ? –ß–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ forEach
// users.forEach(({ username }) => {
//   console.log(username);
// });

// ? ----- 04-task1 -----
/*
? –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑—É–π –æ–±'—î–∫—Ç —Ç–∞–∫–∏–º —á–∏–Ω–æ–º —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è username, firstName, lastName
 */

// const user = {
//   id: 1,
//   username: 'harry_potter',
//   profile: {
//     firstName: 'Harry',
//     lastName: 'Potter',
//     age: 25,
//   },
// };

// console.log(user);

// const {
//   username,
//   profile: { firstName, lastName },
// } = user;

// console.log(`–Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–∑–∞ –Ω—ñ–∫–Ω–µ–π–º–æ–º): ${username}`);
// console.log(`–Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ${firstName}`);
// console.log(`–ü—Ä—ñ–∑–≤–∏—â–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ${lastName}`);

// ? ----- 05-task2 -----
/*
? –î–æ–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é —Ç–∞–∫–∏–º —á–∏–Ω–æ–º —â–æ–± –∫–æ–∂–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å
? –æ–±'—î–∫—Ç–∞ product –±—É–ª–∞ –Ω–µ–∑–∞–ª–µ–∂–Ω–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º
 */

// const product = {
//   title: "Smart TV",
//   price: 25000,
//   category: "Electronics",
//   details: {
//     brand: "Samsung",
//     color: "Black",
//     weight: "15.5",
//   },
// };

//? –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –≤ —Ç—ñ–ª—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
// function displayProductInfo(productInfo) {
//   const {
//     title,
//     price,
//     category,
//     details: { brand, color, weight },
//   } = productInfo;

//   console.log(`–ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É: ${title}`);
//   console.log(`–¶—ñ–Ω–∞: ${price} –≥—Ä–Ω`);
//   console.log(`–ö–∞—Ç–µ–≥–æ—Ä—ñ—è: ${category}`);
//   console.log('–î–µ—Ç–∞–ª—ñ:');
//   console.log(`- –ë—Ä–µ–Ω–¥: ${brand}`);
//   console.log(`- –ö–æ–ª—ñ—Ä: ${color}`);
//   console.log(`- –í–∞–≥–∞: ${weight} –∫–≥`);
// }

// displayProductInfo(product);

//? –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö —Ñ—É–Ω–∫—Ü—ñ—ó
// function displayProductInfo({ title, price, category, details: { brand, color, weight } }) {
//   console.log(`–ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É: ${title}`);
//   console.log(`–¶—ñ–Ω–∞: ${price} –≥—Ä–Ω`);
//   console.log(`–ö–∞—Ç–µ–≥–æ—Ä—ñ—è: ${category}`);
//   console.log('–î–µ—Ç–∞–ª—ñ:');
//   console.log(`- –ë—Ä–µ–Ω–¥: ${brand}`);
//   console.log(`- –ö–æ–ª—ñ—Ä: ${color}`);
//   console.log(`- –í–∞–≥–∞: ${weight} –∫–≥`);
// }

// displayProductInfo(product);

// ? ----- 06-task3 -----
/*
? –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –∑—Äo–±–∏—Ç–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü—ñ—ó calculateHousePerimeter,
? —Ç–∞–∫ —â–æ–± –≤–æ–Ω–∞ –ø—Ä–∏–π–º–∞–ª–∞ –æ–±'—î–∫—Ç –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –±—É–¥–∏–Ω–∫—É,
? –≤–∫–ª—é—á–∞—é—á–∏ –¥–æ–≤–∂–∏–Ω–∏ —Å—Ç–æ—Ä—ñ–Ω –±—É–¥–∏–Ω–∫—É.
? –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ —Ä–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ —Ç–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –ø–µ—Ä–∏–º–µ—Ç—Ä –±—É–¥–∏–Ω–∫—É.
 */

// function calculateHousePerimeter({ sideA, sideB, sideC, sideD }) {
//   return sideA + sideB + sideC + sideD;
// }

// const houseSides = {
//   sideA: 10,
//   sideB: 15,
//   sideC: 10,
//   sideD: 15,
// };

// const perimeter = calculateHousePerimeter(houseSides);

// console.log(`–ü–µ—Ä–∏–º–µ—Ç—Ä –±—É–¥–∏–Ω–∫—É: ${perimeter}`);

// ? ----- 07-task4 -----
/*
? –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é transformUsername(user) —Ç–∞–∫, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –Ω–æ–≤–∏–π –æ–±'—î–∫—Ç 
? —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—é fullName, –∑–∞–º—ñ—Å—Ç—å firstName —Ç–∞ lastName.
*/

// const transformUsername = ({ firstName, lastName, ...newUser }) => {
//   newUser.fullName = `${firstName} ${lastName}`;

//   return newUser;
// };

// console.log(
//   transformUsername({
//     id: 1,
//     firstName: 'Jacob',
//     lastName: 'Mercer',
//     email: 'j.mercer@mail.com',
//     friendCount: 40,
//   })
// );

// console.log(
//   transformUsername({
//     id: 2,
//     firstName: 'Adrian',
//     lastName: 'Cross',
//     email: 'a.cross@hotmail.com',
//     friendCount: 20,
//   })
// );

// ! 23-12-2024 module-09-lesson-1
// ? ----- 01-json -----

/*
 * –§–æ—Ä–º–∞—Ç JSON
 *
 * - –ú–µ—Ç–æ–¥ JSON.strigify(value)
 * - –ú–µ—Ç–æ–¥ JSON.parse(value)
 */

// const users = [
//   {
//     firstName: 'Max',
//     lastName: 'Doyle',
//     age: 30,
//   },
//   {
//     firstName: 'Max',
//     lastName: 'Doyle',
//     age: 30,
//   },
//   {
//     firstName: 'Max',
//     lastName: 'Doyle',
//     age: 30,
//   },
// ];

// console.log(users);

// const userStr = JSON.stringify(users);

// console.log(userStr);

// console.log(JSON.parse(userStr));

/*
 * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è try...catch –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫
 */

// console.log('Start script!');

// try {
//   const user = '{"firstName": "Oleksii",}';

//   JSON.parse(user);
// } catch (err) {
//   console.log(err);
// }

// console.log('End script!');

// ? ----- 02-localstorage -----

/*
 * LocalStorage
 */

// console.log(window.localStorage);

/*
 * –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è
 * –ß–æ–º—É —Ç—Ä–µ–±–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –º–µ—Ç–æ–¥ JSON.stringify
 */

// const product = {
//   title: 'Some title',
//   description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam, earum.',
//   price: 1000,
// };

// sessionStorage.setItem('test', 'some string');
// sessionStorage.setItem('product-info', JSON.stringify(product));

/*
 * –ß–∏—Ç–∞–Ω–Ω—è
 * –ß–æ–º—É —Ç—Ä–µ–±–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –º–µ—Ç–æ–¥ JSON.parse
 */

// console.log(sessionStorage.getItem('test'));

// const product = JSON.parse(sessionStorage.getItem('product-info'));

// console.log(product);
/*
 * –í–∏–¥–∞–ª–µ–Ω–Ω—è
 */

// sessionStorage.removeItem('product-info');
// sessionStorage.clear();

// ? ----- 03-feedback -----

// const feedbackFormEl = document.querySelector(".js-feedback-form");
// let formData = {
//   name: "",
//   email: "",
//   message: "",
// };

// const fillFormFields = () => {
//   try {
//     if (localStorage.length === 0) {
//       return;
//     }

//     const formDataFromLS = JSON.parse(
//       localStorage.getItem("feedback-form-data")
//     );

//     formData = formDataFromLS;

//     for (const key in formDataFromLS) {
//       feedbackFormEl.elements[key].value = formDataFromLS[key];
//     }
//   } catch (err) {
//     console.log(err);
//   }
// };

// fillFormFields();

// const onFormFieldChange = (event) => {
//   const { target: formFieldEl } = event;

//   const fieldValue = formFieldEl.value;
//   const fieldName = formFieldEl.name;

//   formData[fieldName] = fieldValue;

//   localStorage.setItem("feedback-form-data", JSON.stringify(formData));
// };

// const onFeedbackFormSubmit = (event) => {
//   event.preventDefault();

//   const { currentTarget: formEl } = event;

//   formEl.reset();
//   localStorage.removeItem("feedback-form-data");
// };

// feedbackFormEl.addEventListener("change", onFormFieldChange);
// feedbackFormEl.addEventListener("submit", onFeedbackFormSubmit);

// ! 08-01-2025 module-10-lesson-2
//? ----- 01-promises -----
/* –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ –æ–±—Ä–æ–±–∫–∞ –ø—Ä–æ–º—ñ—Å—É
 * - –ö–ª–∞—Å Promise
 * - resolve
 * - reject
 * - then, catch, finally
 */

// const promise = new Promise((resolve, reject) => {
//   setTimeout(() => {
//     const isDone = Math.random() > 0.5;

//     if (isDone) {
//       resolve("Done!");
//     } else {
//       reject("Error!");
//     }
//   }, 2000);
// });

// promise
//   .then((result) => {
//     console.log(result);
//   })
//   .catch((err) => {
//     console.log(err);
//   })
//   .finally(() => {
//     console.log("Preloader stop");
//   });

// console.log(promise);

/*
 * –õ–∞–Ω—Ü—é–∂–∫–∏ –ø—Ä–æ–º—ñ—Å—ñ–≤
 * - –¥–µ–∫—ñ–ª—å–∫–∞ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–∏—Ö then
 * - then –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–æ–º—ñ—Å
 */

// promise
//   .then((result) => {
//     console.log(result);

//     return 10;
//   })
//   .then((data) => {
//     console.log(data);
//   })
//   .catch((err) => {
//     console.log(err);
//   });

//? –©–æ –±—É–¥–µ —É –∫–æ–Ω—Å–æ–ª—ñ
// const promise = new Promise((resolve, reject) => {
//   resolve('1');
// });

// promise
//   .then(data => {
//     console.log(data); // '1'
//   })
//   .then(data => {
//     console.log(data); // undefined

//     return '2';
//   })
//   .then(data => {
//     console.log(data); // '2'
//   });

//? –©–æ –±—É–¥–µ —É –∫–æ–Ω—Å–æ–ª—ñ
// const promise = new Promise((resolve, reject) => {
//   reject('error');
// });

// promise
//   .then(data => {
//     console.log(data);
//   })
//   .then(data => {
//     console.log(data);

//     return '2';
//   })
//   .then(data => {
//     console.log(data);
//   })
//   .catch(error => {
//     console.log(error); // 'error'
//   });

//? ----- 02-promisification -----
//? –ó–∞–ø–∏—Ç –∑–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –Ω–∞ –∫–æ–ª–±—ç–∫–∞—Ö
// const fetchUserByName = (name, onSuccess, onError) => {
//   console.log("–†–æ–±–∏–º–æ –∑–∞–ø–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä...");

//   setTimeout(() => {
//     const isSuccess = Math.random() > 0.5;

//     if (isSuccess) {
//       const user = {
//         firstName: name,
//         lastName: "Francis",
//         age: 30,
//       };

//       onSuccess(user);
//     } else {
//       onError(`–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${name} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
//     }
//   }, 2000);
// };

// const handleSuccessFetch = (data) => {
//   console.log(data);
// };

// const handleErrorFetch = (err) => {
//   console.log(err);
// };

// fetchUserByName("Ida", handleSuccessFetch, handleErrorFetch);

//? –ó–∞–ø–∏—Ç –∑–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –Ω–∞ –ø—Ä–æ–º—ñ—Å–∞—Ö
// const fetchUserByName = (name) => {
//   const promise = new Promise((resolve, reject) => {
//     console.log("–†–æ–±–∏–º–æ –∑–∞–ø–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä...");

//     setTimeout(() => {
//       const isSuccess = Math.random() > 0.5;

//       if (isSuccess) {
//         const user = {
//           firstName: name,
//           lastName: "Francis",
//           age: 30,
//         };

//         resolve(user);
//       } else {
//         reject(`–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${name} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
//       }
//     }, 2000);
//   });

//   return promise;
// };

// fetchUserByName("Ida")
//   .then((result) => {
//     console.log(result);
//   })
//   .catch((err) => {
//     console.log(err);
//   });

//? ----- 03-load-scripts -----
// https://cdn.jsdelivr.net/npm/lodash@4.17.21/lodash.min.js
// https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js
// https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js

/*
 * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç—ñ–≤
 */
//? –†—ñ—à–µ–Ω–Ω—è —á–µ—Ä–µ–∑ –∫–æ–ª–±–µ–∫–∏
// const loadScript = (scriptUrl, onSuccess, onError) => {
//   const script = document.createElement("script");

//   script.src = scriptUrl;

//   document.head.append(script);

//   script.addEventListener("load", () => {
//     onSuccess(`${scriptUrl} –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!`);
//   });

//   script.addEventListener("error", () => {
//     onError(`${scriptUrl} –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–≤—Å—è!`);
//   });
// };

// loadScript(
//   "https://cdn.jsdelivr.net/npm/lodash@4.17.21/lodash.min.js",
//   (message) => {
//     console.log(message);

//     loadScript(
//       "https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js",
//       (message) => {
//         console.log(message);

//         loadScript(
//           "https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js",
//           (message) => {
//             console.log(message);
//           },
//           (err) => {
//             console.log(err);
//           }
//         );
//       },
//       (err) => {
//         console.log(err);
//       }
//     );
//   },
//   (err) => {
//     console.log(err);
//   }
// );

// //? –†—ñ—à–µ–Ω–Ω—è —á–µ—Ä–µ–∑ –ø—Ä–æ–º—ñ—Å–∏
// const loadScript = (scriptUrl) => {
//   const promise = new Promise((resolve, reject) => {
//     const script = document.createElement("script");

//     script.src = scriptUrl;

//     document.head.append(script);

//     script.addEventListener("load", () => {
//       resolve(`${scriptUrl} –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!`);
//     });

//     script.addEventListener("error", () => {
//       reject(`${scriptUrl} –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–≤—Å—è!`);
//     });
//   });

//   return promise;
// };

// loadScript("https://cdn.jsdelivr.net/npm/lodash@4.17.21/lodash.min.js")
//   .then((result) => {
//     console.log(result);
//   })
//   .catch((err) => {
//     console.log(err);
//   });

// loadScript("https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js")
//   .then((result) => {
//     console.log(result);

//     return loadScript(
//       "https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js"
//     );
//   })
//   .then((result) => {
//     console.log(result);
//   })
//   .catch((err) => {
//     console.log(err);
//   });
